{"version":3,"sources":["services/notes.js","Form.js","Filter.js","Delete.js","Numbers.js","Notification.js","App.js","index.js"],"names":["baseUrl","axios","get","newObject","post","id","put","delete","Form","onSubmit","onChange","numberChange","newName","newNumber","value","required","type","Filter","Delete","name","noteObject","setNotes","onClick","window","confirm","noteService","then","response","data","Numbers","nameFilter","map","x","toLowerCase","indexOf","number","Notification","message","errorMessages","className","App","useState","notes","setNewName","setNewNumber","setNameFilter","errorMessage","setErrorMessage","setErrorMessages","useEffect","e","target","preventDefault","date","Date","important","Math","random","some","i","includes","index","findIndex","catch","error","console","log","content","setTimeout","concat","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.824d99c0.chunk.js","sourcesContent":["import axios from \"axios\";\r\nconst baseUrl = \"http://localhost:3001/notes\";\r\n\r\nconst getAll = () => {\r\n  return axios.get(baseUrl);\r\n};\r\n\r\nconst create = (newObject) => {\r\n  return axios.post(baseUrl, newObject);\r\n};\r\n\r\nconst update = (id, newObject) => {\r\n  return axios.put(`${baseUrl}/${id}`, newObject);\r\n};\r\n\r\nconst deleteNote = (id, newObject) => {\r\n  return axios.delete(`${baseUrl}/${id}`, newObject);\r\n};\r\n\r\nexport default { getAll, create, update, deleteNote };\r\n","import React from \"react\";\r\n\r\nconst Form = ({ onSubmit, onChange, numberChange, newName, newNumber }) => {\r\n  return (\r\n    <div>\r\n      <form onSubmit={onSubmit}>\r\n        <div>\r\n          Name: <input value={newName} onChange={onChange} required />\r\n        </div>\r\n        <div>\r\n          Number:{\" \"}\r\n          <input\r\n            type=\"number\"\r\n            value={newNumber}\r\n            onChange={numberChange}\r\n            required\r\n          />\r\n        </div>\r\n        <div>\r\n          <button type=\"submit\">add</button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Form;\r\n","import React from \"react\";\r\n\r\nconst Filter = ({ value, onChange }) => {\r\n  return (\r\n    <div>\r\n      Filter Phonebook\r\n      <input value={value} onChange={onChange} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Filter;\r\n","import React from \"react\";\r\nimport noteService from \"./services/notes\";\r\n\r\nconst Delete = ({ name, id, noteObject, setNotes }) => {\r\n  const deleteNote = () => {\r\n    if (window.confirm(`Delete ${name}`)) {\r\n      noteService.deleteNote(id, noteObject).then((response) => {\r\n        noteService.getAll().then((response) => {\r\n          setNotes(response.data);\r\n        });\r\n      });\r\n    }\r\n  };\r\n  return <button onClick={deleteNote}>delete</button>;\r\n};\r\n\r\nexport default Delete;\r\n","import React from \"react\";\r\nimport Delete from \"./Delete\";\r\n\r\nconst Numbers = ({ data, nameFilter, noteObject, setNotes }) => {\r\n  return (\r\n    <div>\r\n      {data.map((x) => {\r\n        if (x.name.toLowerCase().indexOf(nameFilter.toLowerCase()) > -1) {\r\n          return (\r\n            <p key={x.id}>\r\n              {x.name} {x.number}{\" \"}\r\n              <Delete\r\n                name={x.name}\r\n                id={x.id}\r\n                noteObject={noteObject}\r\n                setNotes={setNotes}\r\n              />\r\n            </p>\r\n          );\r\n        }\r\n        return null;\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Numbers;\r\n","import React from \"react\";\r\n\r\nconst Notification = ({ message, errorMessages }) => {\r\n  if (message === null) {\r\n    return null;\r\n  } else {\r\n    return <div className=\"notification\">{message}</div>;\r\n  }\r\n};\r\n\r\nexport default Notification;\r\n","import React, { useState, useEffect } from \"react\";\nimport noteService from \"./services/notes\";\nimport Form from \"./Form\";\nimport Filter from \"./Filter\";\nimport Numbers from \"./Numbers\";\nimport Notification from \"./Notification\";\nimport \"./index.css\";\n\nconst App = () => {\n  const [notes, setNotes] = useState([]);\n  const [newName, setNewName] = useState(\"\");\n  const [newNumber, setNewNumber] = useState(\"\");\n  const [nameFilter, setNameFilter] = useState(\"\");\n  const [errorMessage, setErrorMessage] = useState(null);\n  const [errorMessages, setErrorMessages] = useState(null);\n\n  const noteObject = {};\n\n  useEffect(() => {\n    noteService.getAll().then((response) => {\n      setNotes(response.data);\n    });\n  }, []);\n\n  const addNote = (e) => {\n    e.preventDefault();\n\n    const noteObject = {\n      name: newName,\n      number: newNumber,\n      date: new Date(),\n      important: Math.random() < 0.5,\n    };\n\n    const duplicate = notes.some((i) => i.name.includes(newName));\n    if (!duplicate) {\n      noteService.create(noteObject).then((response) => {\n        setNotes(notes.concat(response.data));\n        setNewName(\"\");\n        setNewNumber(\"\");\n        setErrorMessage(`Added ${newName}`);\n        setTimeout(() => {\n          setErrorMessage(null);\n        }, 3000);\n      });\n    } else {\n      if (\n        window.confirm(\n          `${newName} is already added to the phonebook, replace the old number with a new one?`\n        )\n      ) {\n        const index = notes.findIndex((x) => x.name === newName);\n        noteService.update(notes[index].id, noteObject).then((response) => {\n          noteService\n            .getAll()\n            .then((response) => {\n              setNotes(response.data);\n            })\n            .catch((error) => {\n              console.log(error);\n              setErrorMessages(\n                `Note '${notes.content}' was already removed from server`\n              );\n              setTimeout(() => {\n                setErrorMessages(null);\n              }, 5000);\n            });\n        });\n      }\n      setNewName(\"\");\n      setNewNumber(\"\");\n    }\n  };\n\n  const onChange = (e) => {\n    setNewName(e.target.value);\n  };\n\n  const numberChange = (e) => {\n    setNewNumber(e.target.value);\n  };\n\n  const filterChange = (e) => {\n    setNameFilter(e.target.value);\n  };\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={errorMessage} errorMessage={errorMessages} />\n      <Filter value={nameFilter} onChange={filterChange} />\n      <h2>Add a new</h2>\n      <Form\n        onSubmit={addNote}\n        onChange={onChange}\n        numberChange={numberChange}\n        newName={newName}\n        newNumber={newNumber}\n      />\n      <h2>Numbers</h2>\n      <Numbers\n        data={notes}\n        nameFilter={nameFilter}\n        noteObject={noteObject}\n        setNotes={setNotes}\n      />\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}